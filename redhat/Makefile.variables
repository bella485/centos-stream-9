
# Variables below should be changed as needed for building on a different
# branch, or with a different upstream branch. This should be the only
# file that needs to be changed now, and is included in redhat/Makefile
# and redhat/Makefile.common

# This is the source branch that you are building out of typically this is
# the current branch.
DIST_BRANCH ?= "main"

# This is the dist release suffix used in the package release, eg. .fc34,
# .el8 etc. In a different branch this may be set to a fixed value.
DIST ?= .el9

# This is a human readable distribution variable that is used to determine the
# OS version (fedora, centos, or rhel).
DISTRO ?=

# The branch used as upstream. This is what the upstream tarball is it
# should be tracked in a local branch. This would be "master" for the
# Linus master branch or linux-5.x.y for a stable branch. It can also be
# any other upstream you have added as a branch locally.
UPSTREAM_BRANCH ?= v5.14

# If VERSION_ON_UPSTREAM is set, the versioning of the rpm package is based
# on a branch tracking upstream. This allows for generating rpms
# based on untagged releases.
VERSION_ON_UPSTREAM:=0

# BUMP_RELEASE determines whether the pkgrelease is bumped when you call
# 'make dist-release'.  It should be set to "yes" if you expect to do
# multiple updates and builds without bumping the base version, and no
# when you expect every build to use a different base kernel version.
BUMP_RELEASE:=yes

# Should DIST tag be present also in source tags and commits? For ARK
# it should be '0' since rpms may be re-build in multiple buildroots.
# Downstream releases with single buildroot are expected to use '1'
# which makes produced rpms match source tags, changelog, etc. including
# dist tag.
USE_DIST_IN_SOURCE:=1

# INCLUDE_*_FILES determines whether or not the specific OS flavor files will
# be included as part of the source RPM.  Downstream projects, such as
# centos-stream or RHEL, can disable file inclusion by setting these values
# to '0'.
INCLUDE_FEDORA_FILES:=0
INCLUDE_RHEL_FILES:=1

# This can be used to change the filename of the specfile.  For example, it can
# be set to "kernel" for kernel.spec or "kernel-rt" for kernel-rt.spec.  This
# is useful for other projects with different specfile names.
PACKAGE_NAME ?= kernel

# This is the executable for 'git' commands.
GIT ?= git

# This is the referenced HEAD commit for git commands and can be used to change
# the "top of tree" commit ID.  This is useful in cases where users want to
# build against an older commit but do not want to check out the tree.
HEAD ?= HEAD

# This is the brew/koji scratch build target.  A list of targets can be found
# by executing the 'brew list-targets' or 'koji list-targets' command.  The
# default values can be found in redhat/Makefile and are dependent on the
# target OS.  The target OS can be changed by setting the DIST or DISTRO
# variables.
BUILD_SCRATCH_TARGET ?=

# This is the brew/koji command scratch build options.
BUILD_TARGET ?=

# This sets the koji/brew configuration profile variable.
BUILD_PROFILE ?=

# This sets the koji|brew build flags for the dist[g]-koji|brew targets.  These
# options are passed directly to the brew and koji commands in those targets.
BUILD_FLAGS ?=

# This overrides the default git repository for the distg-* targets.  See
# the 'make dist-full-help' entry for distg-brew for information on setting
# rhg.url.
RHGITURL?=$(shell $(GIT) config rhg.url || $(GIT) config remote.origin.url)

# This sets the base commit ID for distg-* targets, and must be set on the
# commandline with distg-* targets.
RHGITCOMMIT?=$(shell $(GIT) log -1 --pretty=format:%H)
